name: 'CD: Frontend'

on:
    workflow_run:
        workflows: ["CI: Frontend"]
        types: [completed]
        branches: [main]

    workflow_dispatch: # Allows you to run this workflow manually from the Actions tab

env:
  PACKAGE_NAME: 'blazorapp'
  GITHUB_ROBOT_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  GITHUB_ROBOT_NAME: 'github-actions[bot]'

jobs:
  deploy:
    name: 'Deploy'
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:

    - name: 'Checkout Code'
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - name: 'Install Versionize'
      run: dotnet tool install --global Versionize
      
    - name: 'Setup Git'
      run: |
        git config --local user.email ${{ env.GITHUB_ROBOT_EMAIL }}
        git config --local user.name ${{ env.GITHUB_ROBOT_NAME }}

    - name: Versionize Release
      id: versionize
      run: versionize --changelog-all --exit-insignificant-commits
      continue-on-error: true

    - name: 'No Release Required'
      if: steps.versionize.outcome != 'success'
      run: echo "Skipping Publishing. No Release Required."

    - name: 'Push changes to GitHub'
      if: steps.versionize.outcome == 'success'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}
        tags: true

    - name: 'Create a Release'
      if: steps.versionize.outcome == 'success'
      uses: "actions/github-script@v6"
      with:
        github-token: "${{ secrets.GITHUB_TOKEN }}"
        script: |
          try {
            const tags_url = context.payload.repository.tags_url + "?per_page=1";
            const result = await github.request(tags_url);
            const current_tag = result.data[0].name;
            await github.rest.repos.createRelease({
              draft: false,
              generate_release_notes: true,
              name: current_tag,
              owner: context.repo.owner,
              prerelease: false,
              repo: context.repo.repo,
              tag_name: current_tag,
            });
          } catch (error) {
            core.setFailed(error.message);
          }

    - name: 'Download Artifact'
      if: steps.versionize.outcome == 'success'
      uses: dawidd6/action-download-artifact@v2
      with:
       workflow: ${{ github.event.workflow_run.workflow_id }}
       workflow_conclusion: success
       name: ${{ env.PACKAGE_NAME }}

    - name: 'Deploy to Netlify'
      if: steps.versionize.outcome == 'success'
      id: deploy
      uses: nwtgck/actions-netlify@v1.2
      with:
        publish-dir: ./wwwroot
        netlify-config-path: ./netlify.toml
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: ${{ github.event.pull_request.title }}
        alias: ${{ github.head_ref }}
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1